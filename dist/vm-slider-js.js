this.sliderJS=function(n){var e={};function t(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return n[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)t.d(r,i,function(e){return n[e]}.bind(null,i));return r},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=6)}([function(n,e,t){var r=t(4),i=t(5);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[n.i,i,""]]);var a={insert:"head",singleton:!1};r(i,a);n.exports=i.locals||{}},function(n,e){n.exports='<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 343.089 343.089" style="enable-background:new 0 0 343.089 343.089;" xml:space="preserve"><g><g><g><path d="M239.122,124.473h-125.91V72.228c-0.057-4.328-3.611-7.79-7.939-7.733c-2.146,0.028-4.186,0.935-5.645,2.509 L2.452,166.269c-2.885,2.397-3.281,6.679-0.885,9.564c0.267,0.321,0.563,0.618,0.885,0.885l97.176,99.265 c1.501,1.588,3.563,2.526,5.747,2.612h3.135c2.983-1.448,4.828-4.523,4.702-7.837v-47.02h125.91 c5.262-0.892,9.305-5.148,9.927-10.449v-83.592C249.048,125.518,243.824,124.473,239.122,124.473z"></path><path d="M272.558,121.86c-4.328,0-7.837,3.509-7.837,7.837v83.592c0,4.328,3.509,7.837,7.837,7.837s7.837-3.509,7.837-7.837 v-83.592C280.395,125.369,276.887,121.86,272.558,121.86z"></path><path d="M303.905,121.86c-4.328,0-7.837,3.509-7.837,7.837v83.592c0,4.328,3.509,7.837,7.837,7.837s7.837-3.509,7.837-7.837 v-83.592C311.742,125.369,308.233,121.86,303.905,121.86z"></path><path d="M335.252,121.86c-4.328,0-7.837,3.509-7.837,7.837v83.592c0,4.328,3.509,7.837,7.837,7.837s7.837-3.509,7.837-7.837 v-83.592C343.089,125.369,339.58,121.86,335.252,121.86z"></path></g></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg>'},function(n,e){n.exports='<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 256 256" style="enable-background:new 0 0 256 256;" xml:space="preserve"><g><g><polygon points="225.813,48.907 128,146.72 30.187,48.907 0,79.093 128,207.093 256,79.093 "></polygon></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg>'},function(n,e,t){"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=function(n,e){var t=n[1]||"",r=n[3];if(!r)return t;if(e&&"function"==typeof btoa){var i=(o=r,s=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(A," */")),a=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[t].concat(a).concat([i]).join("\n")}var o,s,A;return[t].join("\n")}(e,n);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,r){"string"==typeof n&&(n=[[null,n,""]]);var i={};if(r)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(i[o]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);r&&i[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),e.push(A))}},e}},function(n,e,t){"use strict";var r,i=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},a=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),o=[];function s(n){for(var e=-1,t=0;t<o.length;t++)if(o[t].identifier===n){e=t;break}return e}function A(n,e){for(var t={},r=[],i=0;i<n.length;i++){var a=n[i],A=e.base?a[0]+e.base:a[0],c=t[A]||0,l="".concat(A," ").concat(c);t[A]=c+1;var d=s(l),u={css:a[1],media:a[2],sourceMap:a[3]};-1!==d?(o[d].references++,o[d].updater(u)):o.push({identifier:l,updater:g(u,e),references:1}),r.push(l)}return r}function c(n){var e=document.createElement("style"),r=n.attributes||{};if(void 0===r.nonce){var i=t.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(n){e.setAttribute(n,r[n])})),"function"==typeof n.insert)n.insert(e);else{var o=a(n.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}return e}var l,d=(l=[],function(n,e){return l[n]=e,l.filter(Boolean).join("\n")});function u(n,e,t,r){var i=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(n.styleSheet)n.styleSheet.cssText=d(e,i);else{var a=document.createTextNode(i),o=n.childNodes;o[e]&&n.removeChild(o[e]),o.length?n.insertBefore(a,o[e]):n.appendChild(a)}}function C(n,e,t){var r=t.css,i=t.media,a=t.sourceMap;if(i?n.setAttribute("media",i):n.removeAttribute("media"),a&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}var p=null,f=0;function g(n,e){var t,r,i;if(e.singleton){var a=f++;t=p||(p=c(e)),r=u.bind(null,t,a,!1),i=u.bind(null,t,a,!0)}else t=c(e),r=C.bind(null,t,e),i=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return r(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;r(n=e)}else i()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=i());var t=A(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var r=0;r<t.length;r++){var i=s(t[r]);o[i].references--}for(var a=A(n,e),c=0;c<t.length;c++){var l=s(t[c]);0===o[l].references&&(o[l].updater(),o.splice(l,1))}t=a}}}},function(n,e,t){"use strict";t.r(e);var r=t(3),i=t.n(r)()(!0);i.push([n.i,":root {\r\n  --checkedWidth: 940px;\r\n  --height: 270px;\r\n}\r\n._3xKYZGvy7lvnXqXxxtTzEX {\r\n  position: relative;\r\n  left: 0px;\r\n  width: var(--checkedWidth);\r\n  height: var(--height);\r\n}\r\n\r\n.IjvhiUQvVT55Iisdr1PAL {\r\n  overflow: hidden;\r\n  position: relative;\r\n  width: var(--checkedWidth);\r\n  height: var(--height);\r\n}\r\n\r\n._1U77gOiKryBvstDT7cCkPQ {\r\n  outline: none;\r\n  width: calc(var(--checkedWidth) - 100px);\r\n  bottom: 0;\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  -webkit-box-pack: justify;\r\n  -ms-flex-pack: justify;\r\n  justify-content: space-between;\r\n}\r\n\r\n\r\n.sVkkTIWg73TQIOB0s1k_0 {\r\n  border: none;\r\n  outline: none;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  -webkit-transition: -webkit-transform 0.7s ease-in-out;\r\n  transition: -webkit-transform 0.7s ease-in-out;\r\n  -o-transition: transform 0.7s ease-in-out;\r\n  transition: transform 0.7s ease-in-out;\r\n  transition: transform 0.7s ease-in-out, -webkit-transform 0.7s ease-in-out;\r\n  -webkit-transform-origin: 50% 50%;\r\n  -ms-transform-origin: 50% 50%;\r\n  transform-origin: 50% 50%;\r\n}\r\n\r\n.sVkkTIWg73TQIOB0s1k_0 svg {\r\n  height: 60px;\r\n}\r\n\r\n.XY7MDigS6V5-4EYQyvfFq {\r\n  border: none;\r\n  outline: none;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  -webkit-transition: opacity 0.7s ease-in-out;\r\n  -o-transition: opacity 0.7s ease-in-out;\r\n  transition: opacity 0.7s ease-in-out;\r\n}\r\n\r\n.XY7MDigS6V5-4EYQyvfFq svg {\r\n  fill:#000;\r\n  -webkit-transition: opacity 0.7s ease-in-out;\r\n  -o-transition: opacity 0.7s ease-in-out;\r\n  transition: opacity 0.7s ease-in-out;\r\n  height: 60px;\r\n}\r\n\r\n._3KdKKqYGXy0_4BzL3cQk5_ {\r\n  border: none;\r\n  outline: none;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  -webkit-transform: rotate(180deg);\r\n  -ms-transform: rotate(180deg);\r\n  transform: rotate(180deg);\r\n  -webkit-transition: opacity 0.7s ease-in-out;\r\n  -o-transition: opacity 0.7s ease-in-out;\r\n  transition: opacity 0.7s ease-in-out;\r\n}\r\n\r\n._3KdKKqYGXy0_4BzL3cQk5_ svg {\r\n  fill:#000;\r\n  width: 100px;\r\n  height: 60px;\r\n  -webkit-transition: opacity 0.7s ease-in-out;\r\n  -o-transition: opacity 0.7s ease-in-out;\r\n  transition: opacity 0.7s ease-in-out;\r\n}\r\n\r\n._3u6yzGRFELd8wiGKnSr4qD {\r\n  display: none;\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: var(--checkedWidth);\r\n  z-index: 0;\r\n  -webkit-backface-visibility: hidden;\r\n  backface-visibility: hidden;\r\n}\r\n\r\n._39-y7Ek2VO_xDjwYQpJrkM {\r\n  width: var(--checkedWidth);\r\n  height: var(--height);\r\n}\r\n\r\nimg {\r\n  width: 100%;\r\n}\r\n\r\n._3SfbN-2TUO4pBeqA48-OMt {\r\n  overflow: hidden;\r\n  display: block;\r\n}\r\n\r\n._3SfbN-2TUO4pBeqA48-OMt ._3F13T4jJzzjWUt1LDSSOCh svg {\r\n  fill: #000;\r\n  height: 60px;\r\n  -webkit-transition: opacity 0.7s ease-in-out;\r\n  -o-transition: opacity 0.7s ease-in-out;\r\n  transition: opacity 0.7s ease-in-out;\r\n  display: block;\r\n  margin: 0 auto;\r\n}\r\n\r\n._3SfbN-2TUO4pBeqA48-OMt ._3F13T4jJzzjWUt1LDSSOCh {\r\n  border: none;\r\n  outline: none;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  -webkit-transition: opacity 0.7s ease-in-out;\r\n  -o-transition: opacity 0.7s ease-in-out;\r\n  transition: opacity 0.7s ease-in-out;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:disabled {\r\n  cursor: default;\r\n}\r\n\r\n._3p9ZupDBFx9zbD2Mt2T0Ii,\r\n._3p9ZupDBFx9zbD2Mt2T0Ii svg {\r\n  opacity: 0;\r\n}\r\n\r\n._3_aj5ez1awyuCScQrl2Hty {\r\n  -webkit-transition: -webkit-transform 0.7s ease-in-out;\r\n  transition: -webkit-transform 0.7s ease-in-out;\r\n  -o-transition: transform 0.7s ease-in-out;\r\n  transition: transform 0.7s ease-in-out;\r\n  transition: transform 0.7s ease-in-out, -webkit-transform 0.7s ease-in-out;\r\n  -webkit-transform: translateX(calc(-1 * var(--checkedWidth)));\r\n  -ms-transform: translateX(calc(-1 * var(--checkedWidth)));\r\n  transform: translateX(calc(-1 * var(--checkedWidth)));\r\n}\r\n\r\n._26NLBmQW2N2WtBbIZNz191 {\r\n  -webkit-transition: -webkit-transform 0.7s ease-in-out;\r\n  transition: -webkit-transform 0.7s ease-in-out;\r\n  -o-transition: transform 0.7s ease-in-out;\r\n  transition: transform 0.7s ease-in-out;\r\n  transition: transform 0.7s ease-in-out, -webkit-transform 0.7s ease-in-out;\r\n  -webkit-transform: translateX(var(--checkedWidth));\r\n  -ms-transform: translateX(var(--checkedWidth));\r\n  transform: translateX(var(--checkedWidth));\r\n}\r\n\r\n.xKr16BMLCmwRuZnJLjbJH {\r\n  -webkit-transform: rotateX(180deg);\r\n  transform: rotateX(180deg);\r\n}\r\n\r\n.lWo5Pn687qBMMnD9Kisr9 {\r\n  display: block;\r\n  z-index: 0;\r\n  left: calc(-1 * var(--checkedWidth));\r\n}\r\n\r\n._2T0xHIAlMJ3ohixo3iuGnv {\r\n  display: block;\r\n  z-index: 10;\r\n  left: 0;\r\n}\r\n\r\n._1KczTzYLFRAmONWpAENvka {\r\n  display: block;\r\n  z-index: 0;\r\n  left: var(--checkedWidth);\r\n}\r\n\r\n._2tO8ojnNE6Uz4tlibhhmpU {\r\n  z-index: 0;\r\n}\r\n\r\n.thns5FIyX7I7ZsRlU5RoF {\r\n  z-index: 10;\r\n}\r\n","",{version:3,sources:["slider.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,eAAe;AACjB;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,0BAA0B;EAC1B,qBAAqB;AACvB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,0BAA0B;EAC1B,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,wCAAwC;EACxC,SAAS;EACT,aAAa;EACb,gBAAgB;EAChB,oBAAoB;EACpB,oBAAoB;EACpB,aAAa;EACb,yBAAyB;EACzB,sBAAsB;EACtB,mBAAmB;EACnB,yBAAyB;EACzB,sBAAsB;EACtB,8BAA8B;AAChC;;;AAGA;EACE,YAAY;EACZ,aAAa;EACb,UAAU;EACV,6BAA6B;EAC7B,sDAAsD;EACtD,8CAA8C;EAC9C,yCAAyC;EACzC,sCAAsC;EACtC,0EAA0E;EAC1E,iCAAiC;EACjC,6BAA6B;EAC7B,yBAAyB;AAC3B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,UAAU;EACV,6BAA6B;EAC7B,4CAA4C;EAC5C,uCAAuC;EACvC,oCAAoC;AACtC;;AAEA;EACE,SAAS;EACT,4CAA4C;EAC5C,uCAAuC;EACvC,oCAAoC;EACpC,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,UAAU;EACV,6BAA6B;EAC7B,iCAAiC;EACjC,6BAA6B;EAC7B,yBAAyB;EACzB,4CAA4C;EAC5C,uCAAuC;EACvC,oCAAoC;AACtC;;AAEA;EACE,SAAS;EACT,YAAY;EACZ,YAAY;EACZ,4CAA4C;EAC5C,uCAAuC;EACvC,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,0BAA0B;EAC1B,UAAU;EACV,mCAAmC;EACnC,2BAA2B;AAC7B;;AAEA;EACE,0BAA0B;EAC1B,qBAAqB;AACvB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,cAAc;AAChB;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,4CAA4C;EAC5C,uCAAuC;EACvC,oCAAoC;EACpC,cAAc;EACd,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,UAAU;EACV,6BAA6B;EAC7B,4CAA4C;EAC5C,uCAAuC;EACvC,oCAAoC;AACtC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;;EAEE,UAAU;AACZ;;AAEA;EACE,sDAAsD;EACtD,8CAA8C;EAC9C,yCAAyC;EACzC,sCAAsC;EACtC,0EAA0E;EAC1E,6DAA6D;EAC7D,yDAAyD;EACzD,qDAAqD;AACvD;;AAEA;EACE,sDAAsD;EACtD,8CAA8C;EAC9C,yCAAyC;EACzC,sCAAsC;EACtC,0EAA0E;EAC1E,kDAAkD;EAClD,8CAA8C;EAC9C,0CAA0C;AAC5C;;AAEA;EACE,kCAAkC;EAClC,0BAA0B;AAC5B;;AAEA;EACE,cAAc;EACd,UAAU;EACV,oCAAoC;AACtC;;AAEA;EACE,cAAc;EACd,WAAW;EACX,OAAO;AACT;;AAEA;EACE,cAAc;EACd,UAAU;EACV,yBAAyB;AAC3B;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,WAAW;AACb",file:"slider.css",sourcesContent:[":root {\r\n  --checkedWidth: 940px;\r\n  --height: 270px;\r\n}\r\n.controlContainer {\r\n  position: relative;\r\n  left: 0px;\r\n  width: var(--checkedWidth);\r\n  height: var(--height);\r\n}\r\n\r\n.slidesContainer {\r\n  overflow: hidden;\r\n  position: relative;\r\n  width: var(--checkedWidth);\r\n  height: var(--height);\r\n}\r\n\r\n.buttonContainer {\r\n  outline: none;\r\n  width: calc(var(--checkedWidth) - 100px);\r\n  bottom: 0;\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  align-items: center;\r\n  -webkit-box-pack: justify;\r\n  -ms-flex-pack: justify;\r\n  justify-content: space-between;\r\n}\r\n\r\n\r\n.btnHideActionBar {\r\n  border: none;\r\n  outline: none;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  -webkit-transition: -webkit-transform 0.7s ease-in-out;\r\n  transition: -webkit-transform 0.7s ease-in-out;\r\n  -o-transition: transform 0.7s ease-in-out;\r\n  transition: transform 0.7s ease-in-out;\r\n  transition: transform 0.7s ease-in-out, -webkit-transform 0.7s ease-in-out;\r\n  -webkit-transform-origin: 50% 50%;\r\n  -ms-transform-origin: 50% 50%;\r\n  transform-origin: 50% 50%;\r\n}\r\n\r\n.btnHideActionBar svg {\r\n  height: 60px;\r\n}\r\n\r\n.btnPrev {\r\n  border: none;\r\n  outline: none;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  -webkit-transition: opacity 0.7s ease-in-out;\r\n  -o-transition: opacity 0.7s ease-in-out;\r\n  transition: opacity 0.7s ease-in-out;\r\n}\r\n\r\n.btnPrev svg {\r\n  fill:#000;\r\n  -webkit-transition: opacity 0.7s ease-in-out;\r\n  -o-transition: opacity 0.7s ease-in-out;\r\n  transition: opacity 0.7s ease-in-out;\r\n  height: 60px;\r\n}\r\n\r\n.btnNext {\r\n  border: none;\r\n  outline: none;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  -webkit-transform: rotate(180deg);\r\n  -ms-transform: rotate(180deg);\r\n  transform: rotate(180deg);\r\n  -webkit-transition: opacity 0.7s ease-in-out;\r\n  -o-transition: opacity 0.7s ease-in-out;\r\n  transition: opacity 0.7s ease-in-out;\r\n}\r\n\r\n.btnNext svg {\r\n  fill:#000;\r\n  width: 100px;\r\n  height: 60px;\r\n  -webkit-transition: opacity 0.7s ease-in-out;\r\n  -o-transition: opacity 0.7s ease-in-out;\r\n  transition: opacity 0.7s ease-in-out;\r\n}\r\n\r\n.imageDefault {\r\n  display: none;\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: var(--checkedWidth);\r\n  z-index: 0;\r\n  -webkit-backface-visibility: hidden;\r\n  backface-visibility: hidden;\r\n}\r\n\r\n.singleImage {\r\n  width: var(--checkedWidth);\r\n  height: var(--height);\r\n}\r\n\r\nimg {\r\n  width: 100%;\r\n}\r\n\r\n.slider {\r\n  overflow: hidden;\r\n  display: block;\r\n}\r\n\r\n.slider .playPauseBtn svg {\r\n  fill: #000;\r\n  height: 60px;\r\n  -webkit-transition: opacity 0.7s ease-in-out;\r\n  -o-transition: opacity 0.7s ease-in-out;\r\n  transition: opacity 0.7s ease-in-out;\r\n  display: block;\r\n  margin: 0 auto;\r\n}\r\n\r\n.slider .playPauseBtn {\r\n  border: none;\r\n  outline: none;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  -webkit-transition: opacity 0.7s ease-in-out;\r\n  -o-transition: opacity 0.7s ease-in-out;\r\n  transition: opacity 0.7s ease-in-out;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:disabled {\r\n  cursor: default;\r\n}\r\n\r\n.opacityInvisible,\r\n.opacityInvisible svg {\r\n  opacity: 0;\r\n}\r\n\r\n.nextClick {\r\n  -webkit-transition: -webkit-transform 0.7s ease-in-out;\r\n  transition: -webkit-transform 0.7s ease-in-out;\r\n  -o-transition: transform 0.7s ease-in-out;\r\n  transition: transform 0.7s ease-in-out;\r\n  transition: transform 0.7s ease-in-out, -webkit-transform 0.7s ease-in-out;\r\n  -webkit-transform: translateX(calc(-1 * var(--checkedWidth)));\r\n  -ms-transform: translateX(calc(-1 * var(--checkedWidth)));\r\n  transform: translateX(calc(-1 * var(--checkedWidth)));\r\n}\r\n\r\n.prevClick {\r\n  -webkit-transition: -webkit-transform 0.7s ease-in-out;\r\n  transition: -webkit-transform 0.7s ease-in-out;\r\n  -o-transition: transform 0.7s ease-in-out;\r\n  transition: transform 0.7s ease-in-out;\r\n  transition: transform 0.7s ease-in-out, -webkit-transform 0.7s ease-in-out;\r\n  -webkit-transform: translateX(var(--checkedWidth));\r\n  -ms-transform: translateX(var(--checkedWidth));\r\n  transform: translateX(var(--checkedWidth));\r\n}\r\n\r\n.hideClick {\r\n  -webkit-transform: rotateX(180deg);\r\n  transform: rotateX(180deg);\r\n}\r\n\r\n.prevNumber {\r\n  display: block;\r\n  z-index: 0;\r\n  left: calc(-1 * var(--checkedWidth));\r\n}\r\n\r\n.currentNumber {\r\n  display: block;\r\n  z-index: 10;\r\n  left: 0;\r\n}\r\n\r\n.nextNumber {\r\n  display: block;\r\n  z-index: 0;\r\n  left: var(--checkedWidth);\r\n}\r\n\r\n.zIndexDefault {\r\n  z-index: 0;\r\n}\r\n\r\n.zIndexActive {\r\n  z-index: 10;\r\n}\r\n"]}]),i.locals={controlContainer:"_3xKYZGvy7lvnXqXxxtTzEX",slidesContainer:"IjvhiUQvVT55Iisdr1PAL",buttonContainer:"_1U77gOiKryBvstDT7cCkPQ",btnHideActionBar:"sVkkTIWg73TQIOB0s1k_0",btnPrev:"XY7MDigS6V5-4EYQyvfFq",btnNext:"_3KdKKqYGXy0_4BzL3cQk5_",imageDefault:"_3u6yzGRFELd8wiGKnSr4qD",singleImage:"_39-y7Ek2VO_xDjwYQpJrkM",slider:"_3SfbN-2TUO4pBeqA48-OMt",playPauseBtn:"_3F13T4jJzzjWUt1LDSSOCh",opacityInvisible:"_3p9ZupDBFx9zbD2Mt2T0Ii",nextClick:"_3_aj5ez1awyuCScQrl2Hty",prevClick:"_26NLBmQW2N2WtBbIZNz191",hideClick:"xKr16BMLCmwRuZnJLjbJH",prevNumber:"lWo5Pn687qBMMnD9Kisr9",currentNumber:"_2T0xHIAlMJ3ohixo3iuGnv",nextNumber:"_1KczTzYLFRAmONWpAENvka",zIndexDefault:"_2tO8ojnNE6Uz4tlibhhmpU",zIndexActive:"thns5FIyX7I7ZsRlU5RoF"},e.default=i},function(n,e,t){"use strict";t.r(e),t.d(e,"createSlider",(function(){return c}));var r=t(1),i=t.n(r),a=t(2),o=t.n(a),s=t(0),A=t.n(s);const c=(n,{width:e=940,height:t=270,timeout:r=3e3,hideControls:a=!1})=>{const s=window.innerWidth>0&&window.innerWidth>=e?e:window.innerWidth;let c=document.documentElement;c.style.setProperty("--checkedWidth",s+"px"),c.style.setProperty("--height",t+"px");const l=document.getElementById(n);if(!l)return;let d=l.children.length;if(0===d)return;const u=document.createElement("div"),C=document.createElement("div");if(C.className=A.a.controlContainer,u.className=A.a.slidesContainer,1===d){const n=[...l.children][0].cloneNode(!0),e=[...l.children][0].cloneNode(!0),t=[...l.children,n,e];C.append(...t),d+=2}else if(2===d){const n=[...l.children][0].cloneNode(!0),e=[...l.children][1].cloneNode(!0),t=[...l.children,n,e];C.append(...t),d+=2}else C.append(...l.children);u.append(C),l.append(u),l.className=A.a.slider;[...C.children].forEach(n=>{n.className=A.a.imageDefault});let p,f=!0,g=1,h=d-1,b=0,m=!1;C.children[h].className=`${A.a.imageDefault} ${A.a.prevNumber}`,C.children[b].className=`${A.a.imageDefault} ${A.a.currentNumber}`,C.children[g].className=`${A.a.imageDefault} ${A.a.nextNumber}`,!a&&s>=724&&function(){let n=!0;const e=document.createElement("div");e.className=A.a.buttonContainer,l.append(e);const t=document.createElement("button"),r=document.createElement("div");t.append(r),r.outerHTML='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50" id="playpause" xmlns:xlink="http://www.w3.org/1999/xlink"><polygon points="7,3 19,3 19,47 7,47" id="leftbar" /><polygon points="31,3 43,3 43,26 43,47 31,47" id="rightbar" /><animate to="7,3 19,3 19,47 7,47" class="lefttopause" id="lefttopause" xlink:href="#leftbar" attributeName="points" dur=".3s" begin="indefinite" fill="freeze" /><animate to="12,0 25,11.5 25,39 12,50" class="lefttoplay" id="lefttoplay" xlink:href="#leftbar" attributeName="points" dur=".3s" begin="indefinite" fill="freeze" /><animate to="31,3 43,3 43,26 43,47 31,47" class="righttopause" id="righttopause" xlink:href="#rightbar" attributeName="points" dur=".3s" begin="indefinite" fill="freeze" /><animate to="25,11.5 39.7,24.5 41.5,26 39.7,27.4 25,39" class="righttoplay" id="righttoplay" xlink:href="#rightbar" attributeName="points" dur=".3s" begin="indefinite" fill="freeze" /></svg>',t.className=A.a.playPauseBtn;const a=t.getElementsByClassName("lefttoplay")[0],s=t.getElementsByClassName("righttoplay")[0],c=t.getElementsByClassName("lefttopause")[0],d=t.getElementsByClassName("righttopause")[0],u=document.createElement("button"),C=document.createElement("button"),p=document.createElement("button");u.className=A.a.btnPrev,C.className=A.a.btnNext,p.className=A.a.btnHideActionBar,u.innerHTML=i.a,C.innerHTML=i.a,p.innerHTML=o.a,e.append(u,t,C,p);p.addEventListener("click",()=>{n?(p.classList.toggle(A.a.hideClick),C.classList.toggle(A.a.opacityInvisible),u.classList.toggle(A.a.opacityInvisible),t.classList.toggle(A.a.opacityInvisible),t.disabled=!0,C.disabled=!0,u.disabled=!0,n=!1):(p.classList.toggle(A.a.hideClick),C.classList.toggle(A.a.opacityInvisible),u.classList.toggle(A.a.opacityInvisible),t.classList.toggle(A.a.opacityInvisible),t.disabled=!1,C.disabled=!1,u.disabled=!1,n=!0)}),t.addEventListener("click",n=>{n.preventDefault(),f?(a.beginElement(),s.beginElement(),f=!1,clearInterval(D)):(c.beginElement(),d.beginElement(),f=!0,z())},!1),C.addEventListener("click",()=>{m||(E(),f&&z())}),u.addEventListener("click",()=>{m||(v(),f&&z())})}();const E=()=>{C.children[h].className=A.a.imageDefault,C.classList.add(A.a.nextClick),g===d-1?x():b===d-1?w():N(),C.children[h].classList.add(A.a.zIndexDefault),C.children[b].classList.add(A.a.zIndexActive),C.children[g].classList.add(A.a.zIndexDefault)},v=()=>{C.children[g].className=A.a.imageDefault,C.classList.add(A.a.prevClick),h===d-1?y():1===b?k():B(),C.children[h].classList.add(A.a.zIndexDefault),C.children[b].classList.add(A.a.zIndexActive),C.children[g].classList.add(A.a.zIndexDefault)};C.addEventListener("transitionstart",()=>{m=!0}),C.addEventListener("transitionend",()=>{C.children[g].className=`${A.a.imageDefault} ${A.a.nextNumber}`,C.children[b].className=`${A.a.imageDefault} ${A.a.currentNumber}`,C.children[h].className=`${A.a.imageDefault} ${A.a.prevNumber}`,C.className=A.a.controlContainer,m=!1});const y=()=>{b=h,h=b-1,g=0},k=()=>{b=0,h=d-1,g=b+1},B=()=>{b--,h=b-1,g=b+1},w=()=>{h=b,b=0,g=b+1},x=()=>{b=g,h=g-1,g=0},N=()=>{b++,h=b-1,g=b+1};let D=setInterval(()=>{E()},r);const z=()=>{D&&clearInterval(D),D=setInterval(()=>{E()},r)};u.addEventListener("touchstart",n=>{n.preventDefault(),clearInterval(D),p=n.changedTouches[0].clientX},!1),u.addEventListener("touchend",n=>{n.preventDefault(),n.changedTouches[0].clientX-p>0?(v(),f&&z()):(E(),f&&z())},!1),u.addEventListener("mousedown",n=>{n.preventDefault(),m||(clearInterval(D),p=n.clientX)},!1),u.addEventListener("mouseup",n=>{n.preventDefault(),m||(n.clientX-p>0?(v(),f&&z()):n.clientX-p<0&&(E(),f&&z()))},!1),window.addEventListener("focus",(function(){z()})),window.addEventListener("blur",(function(){clearInterval(D)}))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbGlkZXJKUy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9zbGlkZXJKUy8uL2Fzc2V0cy9zdHlsZXMvc2xpZGVyLmNzcz8zZjE3Iiwid2VicGFjazovL3NsaWRlckpTLy4vYXNzZXRzL2ljb25zL2Fycm93LnN2ZyIsIndlYnBhY2s6Ly9zbGlkZXJKUy8uL2Fzc2V0cy9pY29ucy9kb3duLnN2ZyIsIndlYnBhY2s6Ly9zbGlkZXJKUy8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3NsaWRlckpTLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9zbGlkZXJKUy8uL2Fzc2V0cy9zdHlsZXMvc2xpZGVyLmNzcyIsIndlYnBhY2s6Ly9zbGlkZXJKUy8uL2Fzc2V0cy9pY29ucy9zdmcuanMiLCJ3ZWJwYWNrOi8vc2xpZGVySlMvLi9zbGlkZXIuanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJhcGkiLCJjb250ZW50IiwiZGVmYXVsdCIsIm9wdGlvbnMiLCJsb2NhbHMiLCJ1c2VTb3VyY2VNYXAiLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNzc01hcHBpbmciLCJidG9hIiwic291cmNlTWFwcGluZyIsInNvdXJjZU1hcCIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJjb25jYXQiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJqb2luIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJkZWR1cGUiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwibGVuZ3RoIiwiaWQiLCJfaSIsInB1c2giLCJtZW1vIiwiaXNPbGRJRSIsIkJvb2xlYW4iLCJ3aW5kb3ciLCJkb2N1bWVudCIsImFsbCIsImF0b2IiLCJnZXRUYXJnZXQiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsInF1ZXJ5U2VsZWN0b3IiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwic3R5bGVzSW5Eb20iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleCIsIm9iaiIsImNzcyIsIm1lZGlhIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRTdHlsZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiY3JlYXRlRWxlbWVudCIsImF0dHJpYnV0ZXMiLCJub25jZSIsImtleXMiLCJmb3JFYWNoIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwicmVtb3ZlIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjc3NOb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJjaGlsZE5vZGVzIiwicmVtb3ZlQ2hpbGQiLCJpbnNlcnRCZWZvcmUiLCJhcHBseVRvVGFnIiwicmVtb3ZlQXR0cmlidXRlIiwiZmlyc3RDaGlsZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJ1cGRhdGUiLCJzdHlsZUluZGV4IiwicGFyZW50Tm9kZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsIm5ld09iaiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaW5kZXgiLCJzcGxpY2UiLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsImNyZWF0ZVNsaWRlciIsInNsaWRlck5hbWUiLCJ3aWR0aCIsImhlaWdodCIsInRpbWVvdXQiLCJoaWRlQ29udHJvbHMiLCJjaGVja2VkV2lkdGgiLCJpbm5lcldpZHRoIiwicm9vdCIsImRvY3VtZW50RWxlbWVudCIsInNldFByb3BlcnR5Iiwic2xpZGVyIiwiZ2V0RWxlbWVudEJ5SWQiLCJudW1iZXJPZkVsZW1lbnRzIiwiY2hpbGRyZW4iLCJzbGlkZXNDb250YWluZXIiLCJjb250cm9sQ29udGFpbmVyIiwiY2xhc3NOYW1lIiwiYWRkRWwiLCJjbG9uZU5vZGUiLCJhZGRFbDIiLCJhcnIiLCJhcHBlbmQiLCJpbWFnZURlZmF1bHQiLCJzdGFydFBvc2l0aW9uIiwic3RhdHVzUHJlc2VudGF0aW9uIiwibmV4dE51bWJlciIsInByZXZOdW1iZXIiLCJjdXJyZW50TnVtYmVyIiwiYnV0dG9uQmxvY2tlZCIsInN0YXR1c0J1dHRvbnNWaXNpYmlsaXR5IiwiYnV0dG9uQ29udGFpbmVyIiwiYnRuUGxheVBhdXNlIiwiYnRuUGxheVBhdXNlU1ZHIiwib3V0ZXJIVE1MIiwicGxheVBhdXNlQnRuIiwibGVmdHRvcGxheSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJyaWdodHRvcGxheSIsImxlZnR0b3BhdXNlIiwicmlnaHR0b3BhdXNlIiwiYnRuUHJldiIsImJ0bk5leHQiLCJidG5IaWRlQWN0aW9uQmFyIiwiaW5uZXJIVE1MIiwiYSIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJoaWRlQ2xpY2siLCJvcGFjaXR5SW52aXNpYmxlIiwiZGlzYWJsZWQiLCJwcmV2ZW50RGVmYXVsdCIsImJlZ2luRWxlbWVudCIsImNsZWFySW50ZXJ2YWwiLCJwcmVzZW50YXRpb24iLCJyZXNldEludGVydmFsIiwic2ltdWxhdGlvbk5leHRDbGljayIsInNpbXVsYXRpb25QcmV2Q2xpY2siLCJhZGRDb250cm9scyIsImFkZCIsIm5leHRDbGljayIsInByZUxhc3RQb3NpdGlvbk9mRWxlbWVudE5leHRDbGljayIsImxhc3RQb3NpdGlvbk9mRWxlbWVudE5leHRDbGljayIsIm1pZGRsZVBvc2l0aW9uT2ZFbGVtZW50TmV4dENsaWNrIiwiekluZGV4RGVmYXVsdCIsInpJbmRleEFjdGl2ZSIsInByZXZDbGljayIsImxhc3RQb3NpdGlvbk9mRWxlbWVudFByZXZDbGljayIsImZpcnN0UG9zaXRpb25PZkVsZW1lbnRQcmV2Q2xpY2siLCJtaWRkbGVQb3NpdGlvbk9mRWxlbWVudFByZXZDbGljayIsInNldEludGVydmFsIiwiZXZlbnQiLCJjaGFuZ2VkVG91Y2hlcyIsImNsaWVudFgiXSwibWFwcGluZ3MiOiIwQkFDRSxJQUFJQSxFQUFtQixHQUd2QixTQUFTQyxFQUFvQkMsR0FHNUIsR0FBR0YsRUFBaUJFLEdBQ25CLE9BQU9GLEVBQWlCRSxHQUFVQyxRQUduQyxJQUFJQyxFQUFTSixFQUFpQkUsR0FBWSxDQUN6Q0csRUFBR0gsRUFDSEksR0FBRyxFQUNISCxRQUFTLElBVVYsT0FOQUksRUFBUUwsR0FBVU0sS0FBS0osRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBU0YsR0FHL0RHLEVBQU9FLEdBQUksRUFHSkYsRUFBT0QsUUEwRGYsT0FyREFGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxP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QmQsS0FDRHJELElBR1BXLEVBQWdCK0IsaUJBQWlCLGFBQWUwQixJQUM1Q0EsRUFBTXBCLGlCQUNORSxjQUFjQyxHQUNkL0IsRUFBZ0JnRCxFQUFNQyxlQUFlLEdBQUdDLFVBQ3pDLEdBRUgzRCxFQUFnQitCLGlCQUFpQixXQUFhMEIsSUFDMUNBLEVBQU1wQixpQkFDRm9CLEVBQU1DLGVBQWUsR0FBR0MsUUFBVWxELEVBQWdCLEdBQ2xEa0MsSUFDSWpDLEdBQW9CK0IsTUFFeEJDLElBQ0loQyxHQUFvQitCLE9BRTdCLEdBRUh6QyxFQUFnQitCLGlCQUFpQixZQUFjMEIsSUFDM0NBLEVBQU1wQixpQkFDRHZCLElBQ0R5QixjQUFjQyxHQUNkL0IsRUFBZ0JnRCxFQUFNRSxXQUUzQixHQUdIM0QsRUFBZ0IrQixpQkFBaUIsVUFBWTBCLElBQ3pDQSxFQUFNcEIsaUJBQ0R2QixJQUNHMkMsRUFBTUUsUUFBVWxELEVBQWdCLEdBQ2hDa0MsSUFDSWpDLEdBQW9CK0IsS0FDakJnQixFQUFNRSxRQUFVbEQsRUFBZ0IsSUFDdkNpQyxJQUNJaEMsR0FBb0IrQixRQUdqQyxHQUVINUgsT0FBT2tILGlCQUFpQixTQUFTLFdBQzdCVSxPQUdKNUgsT0FBT2tILGlCQUFpQixRQUFRLFdBQzVCUSxjQUFjQyIsImZpbGUiOiJ2bS1zbGlkZXItanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNik7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtMSEuL3NsaWRlci5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHZlcnNpb249XFxcIjEuMVxcXCIgaWQ9XFxcIkNhcGFfMVxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiB4bWxuczp4bGluaz1cXFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1xcXCIgeD1cXFwiMHB4XFxcIiB5PVxcXCIwcHhcXFwiIHZpZXdCb3g9XFxcIjAgMCAzNDMuMDg5IDM0My4wODlcXFwiIHN0eWxlPVxcXCJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDM0My4wODkgMzQzLjA4OTtcXFwiIHhtbDpzcGFjZT1cXFwicHJlc2VydmVcXFwiPjxnPjxnPjxnPjxwYXRoIGQ9XFxcIk0yMzkuMTIyLDEyNC40NzNoLTEyNS45MVY3Mi4yMjhjLTAuMDU3LTQuMzI4LTMuNjExLTcuNzktNy45MzktNy43MzNjLTIuMTQ2LDAuMDI4LTQuMTg2LDAuOTM1LTUuNjQ1LDIuNTA5IEwyLjQ1MiwxNjYuMjY5Yy0yLjg4NSwyLjM5Ny0zLjI4MSw2LjY3OS0wLjg4NSw5LjU2NGMwLjI2NywwLjMyMSwwLjU2MywwLjYxOCwwLjg4NSwwLjg4NWw5Ny4xNzYsOTkuMjY1IGMxLjUwMSwxLjU4OCwzLjU2MywyLjUyNiw1Ljc0NywyLjYxMmgzLjEzNWMyLjk4My0xLjQ0OCw0LjgyOC00LjUyMyw0LjcwMi03LjgzN3YtNDcuMDJoMTI1LjkxIGM1LjI2Mi0wLjg5Miw5LjMwNS01LjE0OCw5LjkyNy0xMC40NDl2LTgzLjU5MkMyNDkuMDQ4LDEyNS41MTgsMjQzLjgyNCwxMjQuNDczLDIzOS4xMjIsMTI0LjQ3M3pcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjcyLjU1OCwxMjEuODZjLTQuMzI4LDAtNy44MzcsMy41MDktNy44MzcsNy44Mzd2ODMuNTkyYzAsNC4zMjgsMy41MDksNy44MzcsNy44MzcsNy44MzdzNy44MzctMy41MDksNy44MzctNy44Mzcgdi04My41OTJDMjgwLjM5NSwxMjUuMzY5LDI3Ni44ODcsMTIxLjg2LDI3Mi41NTgsMTIxLjg2elxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0zMDMuOTA1LDEyMS44NmMtNC4zMjgsMC03LjgzNywzLjUwOS03LjgzNyw3LjgzN3Y4My41OTJjMCw0LjMyOCwzLjUwOSw3LjgzNyw3LjgzNyw3LjgzN3M3LjgzNy0zLjUwOSw3LjgzNy03LjgzNyB2LTgzLjU5MkMzMTEuNzQyLDEyNS4zNjksMzA4LjIzMywxMjEuODYsMzAzLjkwNSwxMjEuODZ6XFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTMzNS4yNTIsMTIxLjg2Yy00LjMyOCwwLTcuODM3LDMuNTA5LTcuODM3LDcuODM3djgzLjU5MmMwLDQuMzI4LDMuNTA5LDcuODM3LDcuODM3LDcuODM3czcuODM3LTMuNTA5LDcuODM3LTcuODM3IHYtODMuNTkyQzM0My4wODksMTI1LjM2OSwzMzkuNTgsMTIxLjg2LDMzNS4yNTIsMTIxLjg2elxcXCI+PC9wYXRoPjwvZz48L2c+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjwvc3ZnPlwiIiwibW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgdmVyc2lvbj1cXFwiMS4xXFxcIiBpZD1cXFwiQ2FwYV8xXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIHhtbG5zOnhsaW5rPVxcXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXFxcIiB4PVxcXCIwcHhcXFwiIHk9XFxcIjBweFxcXCIgdmlld0JveD1cXFwiMCAwIDI1NiAyNTZcXFwiIHN0eWxlPVxcXCJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDI1NiAyNTY7XFxcIiB4bWw6c3BhY2U9XFxcInByZXNlcnZlXFxcIj48Zz48Zz48cG9seWdvbiBwb2ludHM9XFxcIjIyNS44MTMsNDguOTA3IDEyOCwxNDYuNzIgMzAuMTg3LDQ4LjkwNyAwLDc5LjA5MyAxMjgsMjA3LjA5MyAyNTYsNzkuMDkzIFxcXCI+PC9wb2x5Z29uPjwvZz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PC9zdmc+XCIiLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcblxuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCAnJykuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufSAvLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5cblxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG4gIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn0iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIGJ0b2EpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyIHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlO1xuICB2YXIgdXBkYXRlO1xuICB2YXIgcmVtb3ZlO1xuXG4gIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuICAgIHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuICAgIHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUgPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblxuICAgIHJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG4gICAgfTtcbiAgfVxuXG4gIHVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmUoKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307IC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cbiAgaWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09ICdib29sZWFuJykge1xuICAgIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuICB9XG5cbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuZXdMaXN0KSAhPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRvbVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5Eb21bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5Eb20uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdCB7XFxyXFxuICAtLWNoZWNrZWRXaWR0aDogOTQwcHg7XFxyXFxuICAtLWhlaWdodDogMjcwcHg7XFxyXFxufVxcclxcbi5fM3hLWVpHdnk3bHZuWHFYeHh0VHpFWCB7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBsZWZ0OiAwcHg7XFxyXFxuICB3aWR0aDogdmFyKC0tY2hlY2tlZFdpZHRoKTtcXHJcXG4gIGhlaWdodDogdmFyKC0taGVpZ2h0KTtcXHJcXG59XFxyXFxuXFxyXFxuLklqdmhpVVF2VlQ1NUlpc2RyMVBBTCB7XFxyXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgd2lkdGg6IHZhcigtLWNoZWNrZWRXaWR0aCk7XFxyXFxuICBoZWlnaHQ6IHZhcigtLWhlaWdodCk7XFxyXFxufVxcclxcblxcclxcbi5fMVU3N2dPaUtyeUJ2c3REVDdjQ2tQUSB7XFxyXFxuICBvdXRsaW5lOiBub25lO1xcclxcbiAgd2lkdGg6IGNhbGModmFyKC0tY2hlY2tlZFdpZHRoKSAtIDEwMHB4KTtcXHJcXG4gIGJvdHRvbTogMDtcXHJcXG4gIHBhZGRpbmc6IDEwcHg7XFxyXFxuICBtYXJnaW4tdG9wOiAxMHB4O1xcclxcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxyXFxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xcclxcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xcclxcbiAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcXHJcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuLnNWa2tUSVdnNzNUUUlPQjBzMWtfMCB7XFxyXFxuICBib3JkZXI6IG5vbmU7XFxyXFxuICBvdXRsaW5lOiBub25lO1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIC1vLXRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dCwgLXdlYmtpdC10cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogNTAlIDUwJTtcXHJcXG4gIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlO1xcclxcbiAgdHJhbnNmb3JtLW9yaWdpbjogNTAlIDUwJTtcXHJcXG59XFxyXFxuXFxyXFxuLnNWa2tUSVdnNzNUUUlPQjBzMWtfMCBzdmcge1xcclxcbiAgaGVpZ2h0OiA2MHB4O1xcclxcbn1cXHJcXG5cXHJcXG4uWFk3TURpZ1M2VjUtNEVZUXl2ZkZxIHtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIG91dGxpbmU6IG5vbmU7XFxyXFxuICBwYWRkaW5nOiAwO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxyXFxuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIC1vLXRyYW5zaXRpb246IG9wYWNpdHkgMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC43cyBlYXNlLWluLW91dDtcXHJcXG59XFxyXFxuXFxyXFxuLlhZN01EaWdTNlY1LTRFWVF5dmZGcSBzdmcge1xcclxcbiAgZmlsbDojMDAwO1xcclxcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICBoZWlnaHQ6IDYwcHg7XFxyXFxufVxcclxcblxcclxcbi5fM0tkS0txWUdYeTBfNEJ6TDNjUWs1XyB7XFxyXFxuICBib3JkZXI6IG5vbmU7XFxyXFxuICBvdXRsaW5lOiBub25lO1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xcclxcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XFxyXFxuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xcclxcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxufVxcclxcblxcclxcbi5fM0tkS0txWUdYeTBfNEJ6TDNjUWs1XyBzdmcge1xcclxcbiAgZmlsbDojMDAwO1xcclxcbiAgd2lkdGg6IDEwMHB4O1xcclxcbiAgaGVpZ2h0OiA2MHB4O1xcclxcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxufVxcclxcblxcclxcbi5fM3U2eXpHUkZFTGQ4d2lHS25TcjRxRCB7XFxyXFxuICBkaXNwbGF5OiBub25lO1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgdG9wOiAwcHg7XFxyXFxuICBsZWZ0OiAwcHg7XFxyXFxuICB3aWR0aDogdmFyKC0tY2hlY2tlZFdpZHRoKTtcXHJcXG4gIHotaW5kZXg6IDA7XFxyXFxuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcXHJcXG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcXHJcXG59XFxyXFxuXFxyXFxuLl8zOS15N0VrMlZPX3hEandZUXBKcmtNIHtcXHJcXG4gIHdpZHRoOiB2YXIoLS1jaGVja2VkV2lkdGgpO1xcclxcbiAgaGVpZ2h0OiB2YXIoLS1oZWlnaHQpO1xcclxcbn1cXHJcXG5cXHJcXG5pbWcge1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxufVxcclxcblxcclxcbi5fM1NmYk4tMlRVTzRwQmVxQTQ4LU9NdCB7XFxyXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbiAgZGlzcGxheTogYmxvY2s7XFxyXFxufVxcclxcblxcclxcbi5fM1NmYk4tMlRVTzRwQmVxQTQ4LU9NdCAuXzNGMTNUNGpKenpqV1V0MUxEU1NPQ2ggc3ZnIHtcXHJcXG4gIGZpbGw6ICMwMDA7XFxyXFxuICBoZWlnaHQ6IDYwcHg7XFxyXFxuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIC1vLXRyYW5zaXRpb246IG9wYWNpdHkgMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgbWFyZ2luOiAwIGF1dG87XFxyXFxufVxcclxcblxcclxcbi5fM1NmYk4tMlRVTzRwQmVxQTQ4LU9NdCAuXzNGMTNUNGpKenpqV1V0MUxEU1NPQ2gge1xcclxcbiAgYm9yZGVyOiBub25lO1xcclxcbiAgb3V0bGluZTogbm9uZTtcXHJcXG4gIHBhZGRpbmc6IDA7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXHJcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbn1cXHJcXG5cXHJcXG5idXR0b24ge1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG5idXR0b246ZGlzYWJsZWQge1xcclxcbiAgY3Vyc29yOiBkZWZhdWx0O1xcclxcbn1cXHJcXG5cXHJcXG4uXzNwOVp1cERCRng5emJEMk10MlQwSWksXFxyXFxuLl8zcDladXBEQkZ4OXpiRDJNdDJUMElpIHN2ZyB7XFxyXFxuICBvcGFjaXR5OiAwO1xcclxcbn1cXHJcXG5cXHJcXG4uXzNfYWo1ZXoxYXd5dUNTY1FybDJIdHkge1xcclxcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIC1vLXRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dCwgLXdlYmtpdC10cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKGNhbGMoLTEgKiB2YXIoLS1jaGVja2VkV2lkdGgpKSk7XFxyXFxuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKGNhbGMoLTEgKiB2YXIoLS1jaGVja2VkV2lkdGgpKSk7XFxyXFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoY2FsYygtMSAqIHZhcigtLWNoZWNrZWRXaWR0aCkpKTtcXHJcXG59XFxyXFxuXFxyXFxuLl8yNk5MQm1RVzJOMld0QmJJWk56MTkxIHtcXHJcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIHRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICAtby10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuN3MgZWFzZS1pbi1vdXQsIC13ZWJraXQtdHJhbnNmb3JtIDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCh2YXIoLS1jaGVja2VkV2lkdGgpKTtcXHJcXG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgodmFyKC0tY2hlY2tlZFdpZHRoKSk7XFxyXFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgodmFyKC0tY2hlY2tlZFdpZHRoKSk7XFxyXFxufVxcclxcblxcclxcbi54S3IxNkJNTENtd1J1Wm5KTGpiSkgge1xcclxcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZVgoMTgwZGVnKTtcXHJcXG4gIHRyYW5zZm9ybTogcm90YXRlWCgxODBkZWcpO1xcclxcbn1cXHJcXG5cXHJcXG4ubFdvNVBuNjg3cUJNTW5EOUtpc3I5IHtcXHJcXG4gIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgei1pbmRleDogMDtcXHJcXG4gIGxlZnQ6IGNhbGMoLTEgKiB2YXIoLS1jaGVja2VkV2lkdGgpKTtcXHJcXG59XFxyXFxuXFxyXFxuLl8yVDB4SElBbE1KM29oaXhvM2l1R252IHtcXHJcXG4gIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgei1pbmRleDogMTA7XFxyXFxuICBsZWZ0OiAwO1xcclxcbn1cXHJcXG5cXHJcXG4uXzFLY3pUellMRlJBbU9OV3BBRU52a2Ege1xcclxcbiAgZGlzcGxheTogYmxvY2s7XFxyXFxuICB6LWluZGV4OiAwO1xcclxcbiAgbGVmdDogdmFyKC0tY2hlY2tlZFdpZHRoKTtcXHJcXG59XFxyXFxuXFxyXFxuLl8ydE84b2puTkU2VXo0dGxpYmhobXBVIHtcXHJcXG4gIHotaW5kZXg6IDA7XFxyXFxufVxcclxcblxcclxcbi50aG5zNUZJeVg3STdac1JsVTVSb0Yge1xcclxcbiAgei1pbmRleDogMTA7XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcInNsaWRlci5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxxQkFBcUI7RUFDckIsZUFBZTtBQUNqQjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCwwQkFBMEI7RUFDMUIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQiwwQkFBMEI7RUFDMUIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHdDQUF3QztFQUN4QyxTQUFTO0VBQ1QsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixvQkFBb0I7RUFDcEIsb0JBQW9CO0VBQ3BCLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQix5QkFBeUI7RUFDekIsc0JBQXNCO0VBQ3RCLDhCQUE4QjtBQUNoQzs7O0FBR0E7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLFVBQVU7RUFDViw2QkFBNkI7RUFDN0Isc0RBQXNEO0VBQ3RELDhDQUE4QztFQUM5Qyx5Q0FBeUM7RUFDekMsc0NBQXNDO0VBQ3RDLDBFQUEwRTtFQUMxRSxpQ0FBaUM7RUFDakMsNkJBQTZCO0VBQzdCLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2IsVUFBVTtFQUNWLDZCQUE2QjtFQUM3Qiw0Q0FBNEM7RUFDNUMsdUNBQXVDO0VBQ3ZDLG9DQUFvQztBQUN0Qzs7QUFFQTtFQUNFLFNBQVM7RUFDVCw0Q0FBNEM7RUFDNUMsdUNBQXVDO0VBQ3ZDLG9DQUFvQztFQUNwQyxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLFVBQVU7RUFDViw2QkFBNkI7RUFDN0IsaUNBQWlDO0VBQ2pDLDZCQUE2QjtFQUM3Qix5QkFBeUI7RUFDekIsNENBQTRDO0VBQzVDLHVDQUF1QztFQUN2QyxvQ0FBb0M7QUFDdEM7O0FBRUE7RUFDRSxTQUFTO0VBQ1QsWUFBWTtFQUNaLFlBQVk7RUFDWiw0Q0FBNEM7RUFDNUMsdUNBQXVDO0VBQ3ZDLG9DQUFvQztBQUN0Qzs7QUFFQTtFQUNFLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7RUFDVCwwQkFBMEI7RUFDMUIsVUFBVTtFQUNWLG1DQUFtQztFQUNuQywyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSwwQkFBMEI7RUFDMUIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsWUFBWTtFQUNaLDRDQUE0QztFQUM1Qyx1Q0FBdUM7RUFDdkMsb0NBQW9DO0VBQ3BDLGNBQWM7RUFDZCxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixVQUFVO0VBQ1YsNkJBQTZCO0VBQzdCLDRDQUE0QztFQUM1Qyx1Q0FBdUM7RUFDdkMsb0NBQW9DO0FBQ3RDOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7O0VBRUUsVUFBVTtBQUNaOztBQUVBO0VBQ0Usc0RBQXNEO0VBQ3RELDhDQUE4QztFQUM5Qyx5Q0FBeUM7RUFDekMsc0NBQXNDO0VBQ3RDLDBFQUEwRTtFQUMxRSw2REFBNkQ7RUFDN0QseURBQXlEO0VBQ3pELHFEQUFxRDtBQUN2RDs7QUFFQTtFQUNFLHNEQUFzRDtFQUN0RCw4Q0FBOEM7RUFDOUMseUNBQXlDO0VBQ3pDLHNDQUFzQztFQUN0QywwRUFBMEU7RUFDMUUsa0RBQWtEO0VBQ2xELDhDQUE4QztFQUM5QywwQ0FBMEM7QUFDNUM7O0FBRUE7RUFDRSxrQ0FBa0M7RUFDbEMsMEJBQTBCO0FBQzVCOztBQUVBO0VBQ0UsY0FBYztFQUNkLFVBQVU7RUFDVixvQ0FBb0M7QUFDdEM7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsV0FBVztFQUNYLE9BQU87QUFDVDs7QUFFQTtFQUNFLGNBQWM7RUFDZCxVQUFVO0VBQ1YseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsV0FBVztBQUNiXCIsXCJmaWxlXCI6XCJzbGlkZXIuY3NzXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjpyb290IHtcXHJcXG4gIC0tY2hlY2tlZFdpZHRoOiA5NDBweDtcXHJcXG4gIC0taGVpZ2h0OiAyNzBweDtcXHJcXG59XFxyXFxuLmNvbnRyb2xDb250YWluZXIge1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgbGVmdDogMHB4O1xcclxcbiAgd2lkdGg6IHZhcigtLWNoZWNrZWRXaWR0aCk7XFxyXFxuICBoZWlnaHQ6IHZhcigtLWhlaWdodCk7XFxyXFxufVxcclxcblxcclxcbi5zbGlkZXNDb250YWluZXIge1xcclxcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIHdpZHRoOiB2YXIoLS1jaGVja2VkV2lkdGgpO1xcclxcbiAgaGVpZ2h0OiB2YXIoLS1oZWlnaHQpO1xcclxcbn1cXHJcXG5cXHJcXG4uYnV0dG9uQ29udGFpbmVyIHtcXHJcXG4gIG91dGxpbmU6IG5vbmU7XFxyXFxuICB3aWR0aDogY2FsYyh2YXIoLS1jaGVja2VkV2lkdGgpIC0gMTAwcHgpO1xcclxcbiAgYm90dG9tOiAwO1xcclxcbiAgcGFkZGluZzogMTBweDtcXHJcXG4gIG1hcmdpbi10b3A6IDEwcHg7XFxyXFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXHJcXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XFxyXFxuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XFxyXFxuICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4uYnRuSGlkZUFjdGlvbkJhciB7XFxyXFxuICBib3JkZXI6IG5vbmU7XFxyXFxuICBvdXRsaW5lOiBub25lO1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIC1vLXRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dCwgLXdlYmtpdC10cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIC13ZWJraXQtdHJhbnNmb3JtLW9yaWdpbjogNTAlIDUwJTtcXHJcXG4gIC1tcy10cmFuc2Zvcm0tb3JpZ2luOiA1MCUgNTAlO1xcclxcbiAgdHJhbnNmb3JtLW9yaWdpbjogNTAlIDUwJTtcXHJcXG59XFxyXFxuXFxyXFxuLmJ0bkhpZGVBY3Rpb25CYXIgc3ZnIHtcXHJcXG4gIGhlaWdodDogNjBweDtcXHJcXG59XFxyXFxuXFxyXFxuLmJ0blByZXYge1xcclxcbiAgYm9yZGVyOiBub25lO1xcclxcbiAgb3V0bGluZTogbm9uZTtcXHJcXG4gIHBhZGRpbmc6IDA7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXHJcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbn1cXHJcXG5cXHJcXG4uYnRuUHJldiBzdmcge1xcclxcbiAgZmlsbDojMDAwO1xcclxcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICBoZWlnaHQ6IDYwcHg7XFxyXFxufVxcclxcblxcclxcbi5idG5OZXh0IHtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIG91dGxpbmU6IG5vbmU7XFxyXFxuICBwYWRkaW5nOiAwO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxyXFxuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XFxyXFxuICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcXHJcXG4gIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XFxyXFxuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIC1vLXRyYW5zaXRpb246IG9wYWNpdHkgMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC43cyBlYXNlLWluLW91dDtcXHJcXG59XFxyXFxuXFxyXFxuLmJ0bk5leHQgc3ZnIHtcXHJcXG4gIGZpbGw6IzAwMDtcXHJcXG4gIHdpZHRoOiAxMDBweDtcXHJcXG4gIGhlaWdodDogNjBweDtcXHJcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbn1cXHJcXG5cXHJcXG4uaW1hZ2VEZWZhdWx0IHtcXHJcXG4gIGRpc3BsYXk6IG5vbmU7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICB0b3A6IDBweDtcXHJcXG4gIGxlZnQ6IDBweDtcXHJcXG4gIHdpZHRoOiB2YXIoLS1jaGVja2VkV2lkdGgpO1xcclxcbiAgei1pbmRleDogMDtcXHJcXG4gIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xcclxcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xcclxcbn1cXHJcXG5cXHJcXG4uc2luZ2xlSW1hZ2Uge1xcclxcbiAgd2lkdGg6IHZhcigtLWNoZWNrZWRXaWR0aCk7XFxyXFxuICBoZWlnaHQ6IHZhcigtLWhlaWdodCk7XFxyXFxufVxcclxcblxcclxcbmltZyB7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG59XFxyXFxuXFxyXFxuLnNsaWRlciB7XFxyXFxuICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbiAgZGlzcGxheTogYmxvY2s7XFxyXFxufVxcclxcblxcclxcbi5zbGlkZXIgLnBsYXlQYXVzZUJ0biBzdmcge1xcclxcbiAgZmlsbDogIzAwMDtcXHJcXG4gIGhlaWdodDogNjBweDtcXHJcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgZGlzcGxheTogYmxvY2s7XFxyXFxuICBtYXJnaW46IDAgYXV0bztcXHJcXG59XFxyXFxuXFxyXFxuLnNsaWRlciAucGxheVBhdXNlQnRuIHtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIG91dGxpbmU6IG5vbmU7XFxyXFxuICBwYWRkaW5nOiAwO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxyXFxuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIC1vLXRyYW5zaXRpb246IG9wYWNpdHkgMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC43cyBlYXNlLWluLW91dDtcXHJcXG59XFxyXFxuXFxyXFxuYnV0dG9uIHtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuYnV0dG9uOmRpc2FibGVkIHtcXHJcXG4gIGN1cnNvcjogZGVmYXVsdDtcXHJcXG59XFxyXFxuXFxyXFxuLm9wYWNpdHlJbnZpc2libGUsXFxyXFxuLm9wYWNpdHlJbnZpc2libGUgc3ZnIHtcXHJcXG4gIG9wYWNpdHk6IDA7XFxyXFxufVxcclxcblxcclxcbi5uZXh0Q2xpY2sge1xcclxcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIC1vLXRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dCwgLXdlYmtpdC10cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKGNhbGMoLTEgKiB2YXIoLS1jaGVja2VkV2lkdGgpKSk7XFxyXFxuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKGNhbGMoLTEgKiB2YXIoLS1jaGVja2VkV2lkdGgpKSk7XFxyXFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoY2FsYygtMSAqIHZhcigtLWNoZWNrZWRXaWR0aCkpKTtcXHJcXG59XFxyXFxuXFxyXFxuLnByZXZDbGljayB7XFxyXFxuICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICB0cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgLW8tdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuN3MgZWFzZS1pbi1vdXQ7XFxyXFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC43cyBlYXNlLWluLW91dDtcXHJcXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0LCAtd2Via2l0LXRyYW5zZm9ybSAwLjdzIGVhc2UtaW4tb3V0O1xcclxcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgodmFyKC0tY2hlY2tlZFdpZHRoKSk7XFxyXFxuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKHZhcigtLWNoZWNrZWRXaWR0aCkpO1xcclxcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKHZhcigtLWNoZWNrZWRXaWR0aCkpO1xcclxcbn1cXHJcXG5cXHJcXG4uaGlkZUNsaWNrIHtcXHJcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGVYKDE4MGRlZyk7XFxyXFxuICB0cmFuc2Zvcm06IHJvdGF0ZVgoMTgwZGVnKTtcXHJcXG59XFxyXFxuXFxyXFxuLnByZXZOdW1iZXIge1xcclxcbiAgZGlzcGxheTogYmxvY2s7XFxyXFxuICB6LWluZGV4OiAwO1xcclxcbiAgbGVmdDogY2FsYygtMSAqIHZhcigtLWNoZWNrZWRXaWR0aCkpO1xcclxcbn1cXHJcXG5cXHJcXG4uY3VycmVudE51bWJlciB7XFxyXFxuICBkaXNwbGF5OiBibG9jaztcXHJcXG4gIHotaW5kZXg6IDEwO1xcclxcbiAgbGVmdDogMDtcXHJcXG59XFxyXFxuXFxyXFxuLm5leHROdW1iZXIge1xcclxcbiAgZGlzcGxheTogYmxvY2s7XFxyXFxuICB6LWluZGV4OiAwO1xcclxcbiAgbGVmdDogdmFyKC0tY2hlY2tlZFdpZHRoKTtcXHJcXG59XFxyXFxuXFxyXFxuLnpJbmRleERlZmF1bHQge1xcclxcbiAgei1pbmRleDogMDtcXHJcXG59XFxyXFxuXFxyXFxuLnpJbmRleEFjdGl2ZSB7XFxyXFxuICB6LWluZGV4OiAxMDtcXHJcXG59XFxyXFxuXCJdfV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcImNvbnRyb2xDb250YWluZXJcIjogXCJfM3hLWVpHdnk3bHZuWHFYeHh0VHpFWFwiLFxuXHRcInNsaWRlc0NvbnRhaW5lclwiOiBcIklqdmhpVVF2VlQ1NUlpc2RyMVBBTFwiLFxuXHRcImJ1dHRvbkNvbnRhaW5lclwiOiBcIl8xVTc3Z09pS3J5QnZzdERUN2NDa1BRXCIsXG5cdFwiYnRuSGlkZUFjdGlvbkJhclwiOiBcInNWa2tUSVdnNzNUUUlPQjBzMWtfMFwiLFxuXHRcImJ0blByZXZcIjogXCJYWTdNRGlnUzZWNS00RVlReXZmRnFcIixcblx0XCJidG5OZXh0XCI6IFwiXzNLZEtLcVlHWHkwXzRCekwzY1FrNV9cIixcblx0XCJpbWFnZURlZmF1bHRcIjogXCJfM3U2eXpHUkZFTGQ4d2lHS25TcjRxRFwiLFxuXHRcInNpbmdsZUltYWdlXCI6IFwiXzM5LXk3RWsyVk9feERqd1lRcEpya01cIixcblx0XCJzbGlkZXJcIjogXCJfM1NmYk4tMlRVTzRwQmVxQTQ4LU9NdFwiLFxuXHRcInBsYXlQYXVzZUJ0blwiOiBcIl8zRjEzVDRqSnp6aldVdDFMRFNTT0NoXCIsXG5cdFwib3BhY2l0eUludmlzaWJsZVwiOiBcIl8zcDladXBEQkZ4OXpiRDJNdDJUMElpXCIsXG5cdFwibmV4dENsaWNrXCI6IFwiXzNfYWo1ZXoxYXd5dUNTY1FybDJIdHlcIixcblx0XCJwcmV2Q2xpY2tcIjogXCJfMjZOTEJtUVcyTjJXdEJiSVpOejE5MVwiLFxuXHRcImhpZGVDbGlja1wiOiBcInhLcjE2Qk1MQ213UnVabkpMamJKSFwiLFxuXHRcInByZXZOdW1iZXJcIjogXCJsV281UG42ODdxQk1NbkQ5S2lzcjlcIixcblx0XCJjdXJyZW50TnVtYmVyXCI6IFwiXzJUMHhISUFsTUozb2hpeG8zaXVHbnZcIixcblx0XCJuZXh0TnVtYmVyXCI6IFwiXzFLY3pUellMRlJBbU9OV3BBRU52a2FcIixcblx0XCJ6SW5kZXhEZWZhdWx0XCI6IFwiXzJ0Tzhvam5ORTZVejR0bGliaGhtcFVcIixcblx0XCJ6SW5kZXhBY3RpdmVcIjogXCJ0aG5zNUZJeVg3STdac1JsVTVSb0ZcIlxufTtcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiZXhwb3J0IGRlZmF1bHQgJzxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgNTAgNTBcIiBpZD1cInBsYXlwYXVzZVwiIHhtbG5zOnhsaW5rPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiPjxwb2x5Z29uIHBvaW50cz1cIjcsMyAxOSwzIDE5LDQ3IDcsNDdcIiBpZD1cImxlZnRiYXJcIiAvPjxwb2x5Z29uIHBvaW50cz1cIjMxLDMgNDMsMyA0MywyNiA0Myw0NyAzMSw0N1wiIGlkPVwicmlnaHRiYXJcIiAvPjxhbmltYXRlIHRvPVwiNywzIDE5LDMgMTksNDcgNyw0N1wiIGNsYXNzPVwibGVmdHRvcGF1c2VcIiBpZD1cImxlZnR0b3BhdXNlXCIgeGxpbms6aHJlZj1cIiNsZWZ0YmFyXCIgYXR0cmlidXRlTmFtZT1cInBvaW50c1wiIGR1cj1cIi4zc1wiIGJlZ2luPVwiaW5kZWZpbml0ZVwiIGZpbGw9XCJmcmVlemVcIiAvPjxhbmltYXRlIHRvPVwiMTIsMCAyNSwxMS41IDI1LDM5IDEyLDUwXCIgY2xhc3M9XCJsZWZ0dG9wbGF5XCIgaWQ9XCJsZWZ0dG9wbGF5XCIgeGxpbms6aHJlZj1cIiNsZWZ0YmFyXCIgYXR0cmlidXRlTmFtZT1cInBvaW50c1wiIGR1cj1cIi4zc1wiIGJlZ2luPVwiaW5kZWZpbml0ZVwiIGZpbGw9XCJmcmVlemVcIiAvPjxhbmltYXRlIHRvPVwiMzEsMyA0MywzIDQzLDI2IDQzLDQ3IDMxLDQ3XCIgY2xhc3M9XCJyaWdodHRvcGF1c2VcIiBpZD1cInJpZ2h0dG9wYXVzZVwiIHhsaW5rOmhyZWY9XCIjcmlnaHRiYXJcIiBhdHRyaWJ1dGVOYW1lPVwicG9pbnRzXCIgZHVyPVwiLjNzXCIgYmVnaW49XCJpbmRlZmluaXRlXCIgZmlsbD1cImZyZWV6ZVwiIC8+PGFuaW1hdGUgdG89XCIyNSwxMS41IDM5LjcsMjQuNSA0MS41LDI2IDM5LjcsMjcuNCAyNSwzOVwiIGNsYXNzPVwicmlnaHR0b3BsYXlcIiBpZD1cInJpZ2h0dG9wbGF5XCIgeGxpbms6aHJlZj1cIiNyaWdodGJhclwiIGF0dHJpYnV0ZU5hbWU9XCJwb2ludHNcIiBkdXI9XCIuM3NcIiBiZWdpbj1cImluZGVmaW5pdGVcIiBmaWxsPVwiZnJlZXplXCIgLz48L3N2Zz4nIiwiaW1wb3J0IHN2Z091dGVySFRNTEVsZW1lbnQgZnJvbSAnLi9hc3NldHMvaWNvbnMvc3ZnJ1xyXG5pbXBvcnQgYXJyb3cgZnJvbSAnLi9hc3NldHMvaWNvbnMvYXJyb3cuc3ZnJ1xyXG5pbXBvcnQgZG93biBmcm9tICcuL2Fzc2V0cy9pY29ucy9kb3duLnN2ZydcclxuaW1wb3J0IHN0eWxlcyBmcm9tICcuL2Fzc2V0cy9zdHlsZXMvc2xpZGVyLmNzcydcclxuXHJcbmNvbnN0IGNyZWF0ZVNsaWRlciA9IChzbGlkZXJOYW1lLCB7IHdpZHRoID0gOTQwLCBoZWlnaHQgPSAyNzAsIHRpbWVvdXQgPSAzMDAwLCBoaWRlQ29udHJvbHMgPSBmYWxzZSB9KSA9PiB7XHJcbiAgICBjb25zdCBjaGVja2VkV2lkdGggPSAod2luZG93LmlubmVyV2lkdGggPiAwKSAmJiB3aW5kb3cuaW5uZXJXaWR0aCA+PSB3aWR0aCA/IHdpZHRoIDogd2luZG93LmlubmVyV2lkdGg7XHJcblxyXG5cclxuICAgIGxldCByb290ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xyXG4gICAgcm9vdC5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1jaGVja2VkV2lkdGgnLCBjaGVja2VkV2lkdGggKyBcInB4XCIpO1xyXG4gICAgcm9vdC5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1oZWlnaHQnLCBoZWlnaHQgKyBcInB4XCIpO1xyXG5cclxuICAgIGNvbnN0IHNsaWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHNsaWRlck5hbWUpXHJcblxyXG4gICAgaWYgKCFzbGlkZXIpIHJldHVybjtcclxuXHJcbiAgICBjb25zdCBkZWZhdWx0TnVtYmVyT2ZFbGVtZW50cyA9IHNsaWRlci5jaGlsZHJlbi5sZW5ndGg7XHJcbiAgICBsZXQgbnVtYmVyT2ZFbGVtZW50cyA9IGRlZmF1bHROdW1iZXJPZkVsZW1lbnRzXHJcblxyXG4gICAgaWYgKG51bWJlck9mRWxlbWVudHMgPT09IDApIHJldHVybjtcclxuXHJcbiAgICBjb25zdCBzbGlkZXNDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG4gICAgY29uc3QgY29udHJvbENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcblxyXG4gICAgY29udHJvbENvbnRhaW5lci5jbGFzc05hbWUgPSBzdHlsZXMuY29udHJvbENvbnRhaW5lclxyXG4gICAgc2xpZGVzQ29udGFpbmVyLmNsYXNzTmFtZSA9IHN0eWxlcy5zbGlkZXNDb250YWluZXJcclxuXHJcbiAgICBpZiAobnVtYmVyT2ZFbGVtZW50cyA9PT0gMSkge1xyXG4gICAgICAgIGNvbnN0IGFkZEVsID0gWy4uLnNsaWRlci5jaGlsZHJlbl1bMF0uY2xvbmVOb2RlKHRydWUpXHJcbiAgICAgICAgY29uc3QgYWRkRWwyID0gWy4uLnNsaWRlci5jaGlsZHJlbl1bMF0uY2xvbmVOb2RlKHRydWUpXHJcbiAgICAgICAgY29uc3QgYXJyID0gWy4uLnNsaWRlci5jaGlsZHJlbiwgYWRkRWwsIGFkZEVsMl1cclxuICAgICAgICBjb250cm9sQ29udGFpbmVyLmFwcGVuZCguLi5hcnIpXHJcbiAgICAgICAgbnVtYmVyT2ZFbGVtZW50cyArPSAyXHJcbiAgICB9IGVsc2UgaWYgKG51bWJlck9mRWxlbWVudHMgPT09IDIpIHtcclxuICAgICAgICBjb25zdCBhZGRFbCA9IFsuLi5zbGlkZXIuY2hpbGRyZW5dWzBdLmNsb25lTm9kZSh0cnVlKVxyXG4gICAgICAgIGNvbnN0IGFkZEVsMiA9IFsuLi5zbGlkZXIuY2hpbGRyZW5dWzFdLmNsb25lTm9kZSh0cnVlKVxyXG4gICAgICAgIGNvbnN0IGFyciA9IFsuLi5zbGlkZXIuY2hpbGRyZW4sIGFkZEVsLCBhZGRFbDJdXHJcbiAgICAgICAgY29udHJvbENvbnRhaW5lci5hcHBlbmQoLi4uYXJyKVxyXG4gICAgICAgIG51bWJlck9mRWxlbWVudHMgKz0gMlxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBjb250cm9sQ29udGFpbmVyLmFwcGVuZCguLi5zbGlkZXIuY2hpbGRyZW4pXHJcbiAgICB9XHJcblxyXG4gICAgc2xpZGVzQ29udGFpbmVyLmFwcGVuZChjb250cm9sQ29udGFpbmVyKVxyXG4gICAgc2xpZGVyLmFwcGVuZChzbGlkZXNDb250YWluZXIpXHJcbiAgICBzbGlkZXIuY2xhc3NOYW1lID0gc3R5bGVzLnNsaWRlclxyXG4gICAgY29uc3QgY2hpbGRBcnJheSA9IFsuLi5jb250cm9sQ29udGFpbmVyLmNoaWxkcmVuXVxyXG4gICAgY2hpbGRBcnJheS5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgIGl0ZW0uY2xhc3NOYW1lID0gc3R5bGVzLmltYWdlRGVmYXVsdFxyXG4gICAgfSlcclxuXHJcbiAgICBsZXQgc3RhdHVzUHJlc2VudGF0aW9uID0gdHJ1ZVxyXG4gICAgbGV0IG5leHROdW1iZXIgPSAxXHJcbiAgICBsZXQgcHJldk51bWJlciA9IG51bWJlck9mRWxlbWVudHMgLSAxXHJcbiAgICBsZXQgY3VycmVudE51bWJlciA9IDBcclxuICAgIGxldCBidXR0b25CbG9ja2VkID0gZmFsc2VcclxuICAgIGxldCBzdGFydFBvc2l0aW9uXHJcblxyXG4gICAgY29udHJvbENvbnRhaW5lci5jaGlsZHJlbltwcmV2TnVtYmVyXS5jbGFzc05hbWUgPSBgJHtzdHlsZXMuaW1hZ2VEZWZhdWx0fSAke3N0eWxlcy5wcmV2TnVtYmVyfWBcclxuICAgIGNvbnRyb2xDb250YWluZXIuY2hpbGRyZW5bY3VycmVudE51bWJlcl0uY2xhc3NOYW1lID0gYCR7c3R5bGVzLmltYWdlRGVmYXVsdH0gJHtzdHlsZXMuY3VycmVudE51bWJlcn1gXHJcbiAgICBjb250cm9sQ29udGFpbmVyLmNoaWxkcmVuW25leHROdW1iZXJdLmNsYXNzTmFtZSA9IGAke3N0eWxlcy5pbWFnZURlZmF1bHR9ICR7c3R5bGVzLm5leHROdW1iZXJ9YFxyXG5cclxuXHJcbiAgICBpZiAoIWhpZGVDb250cm9scyAmJiBjaGVja2VkV2lkdGggPj0gNzI0KSB7XHJcbiAgICAgICAgYWRkQ29udHJvbHMoKVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHNpbXVsYXRpb25OZXh0Q2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgY29udHJvbENvbnRhaW5lci5jaGlsZHJlbltwcmV2TnVtYmVyXS5jbGFzc05hbWUgPSBzdHlsZXMuaW1hZ2VEZWZhdWx0XHJcbiAgICAgICAgY29udHJvbENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHN0eWxlcy5uZXh0Q2xpY2spXHJcblxyXG4gICAgICAgIGlmIChuZXh0TnVtYmVyID09PSBudW1iZXJPZkVsZW1lbnRzIC0gMSkge1xyXG4gICAgICAgICAgICBwcmVMYXN0UG9zaXRpb25PZkVsZW1lbnROZXh0Q2xpY2soKVxyXG4gICAgICAgIH0gZWxzZSBpZiAoY3VycmVudE51bWJlciA9PT0gbnVtYmVyT2ZFbGVtZW50cyAtIDEpIHtcclxuICAgICAgICAgICAgbGFzdFBvc2l0aW9uT2ZFbGVtZW50TmV4dENsaWNrKClcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBtaWRkbGVQb3NpdGlvbk9mRWxlbWVudE5leHRDbGljaygpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb250cm9sQ29udGFpbmVyLmNoaWxkcmVuW3ByZXZOdW1iZXJdLmNsYXNzTGlzdC5hZGQoc3R5bGVzLnpJbmRleERlZmF1bHQpXHJcbiAgICAgICAgY29udHJvbENvbnRhaW5lci5jaGlsZHJlbltjdXJyZW50TnVtYmVyXS5jbGFzc0xpc3QuYWRkKHN0eWxlcy56SW5kZXhBY3RpdmUpXHJcbiAgICAgICAgY29udHJvbENvbnRhaW5lci5jaGlsZHJlbltuZXh0TnVtYmVyXS5jbGFzc0xpc3QuYWRkKHN0eWxlcy56SW5kZXhEZWZhdWx0KVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHNpbXVsYXRpb25QcmV2Q2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgY29udHJvbENvbnRhaW5lci5jaGlsZHJlbltuZXh0TnVtYmVyXS5jbGFzc05hbWUgPSBzdHlsZXMuaW1hZ2VEZWZhdWx0XHJcbiAgICAgICAgY29udHJvbENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHN0eWxlcy5wcmV2Q2xpY2spXHJcblxyXG4gICAgICAgIGlmIChwcmV2TnVtYmVyID09PSBudW1iZXJPZkVsZW1lbnRzIC0gMSkge1xyXG4gICAgICAgICAgICBsYXN0UG9zaXRpb25PZkVsZW1lbnRQcmV2Q2xpY2soKVxyXG4gICAgICAgIH0gZWxzZSBpZiAoY3VycmVudE51bWJlciA9PT0gMSkge1xyXG4gICAgICAgICAgICBmaXJzdFBvc2l0aW9uT2ZFbGVtZW50UHJldkNsaWNrKClcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBtaWRkbGVQb3NpdGlvbk9mRWxlbWVudFByZXZDbGljaygpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb250cm9sQ29udGFpbmVyLmNoaWxkcmVuW3ByZXZOdW1iZXJdLmNsYXNzTGlzdC5hZGQoc3R5bGVzLnpJbmRleERlZmF1bHQpXHJcbiAgICAgICAgY29udHJvbENvbnRhaW5lci5jaGlsZHJlbltjdXJyZW50TnVtYmVyXS5jbGFzc0xpc3QuYWRkKHN0eWxlcy56SW5kZXhBY3RpdmUpXHJcbiAgICAgICAgY29udHJvbENvbnRhaW5lci5jaGlsZHJlbltuZXh0TnVtYmVyXS5jbGFzc0xpc3QuYWRkKHN0eWxlcy56SW5kZXhEZWZhdWx0KVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnRyb2xDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbnN0YXJ0JywgKCkgPT4ge1xyXG4gICAgICAgIGJ1dHRvbkJsb2NrZWQgPSB0cnVlXHJcbiAgICB9KVxyXG5cclxuICAgIGNvbnRyb2xDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsICgpID0+IHtcclxuICAgICAgICBjb250cm9sQ29udGFpbmVyLmNoaWxkcmVuW25leHROdW1iZXJdLmNsYXNzTmFtZSA9IGAke3N0eWxlcy5pbWFnZURlZmF1bHR9ICR7c3R5bGVzLm5leHROdW1iZXJ9YFxyXG4gICAgICAgIGNvbnRyb2xDb250YWluZXIuY2hpbGRyZW5bY3VycmVudE51bWJlcl0uY2xhc3NOYW1lID0gYCR7c3R5bGVzLmltYWdlRGVmYXVsdH0gJHtzdHlsZXMuY3VycmVudE51bWJlcn1gXHJcbiAgICAgICAgY29udHJvbENvbnRhaW5lci5jaGlsZHJlbltwcmV2TnVtYmVyXS5jbGFzc05hbWUgPSBgJHtzdHlsZXMuaW1hZ2VEZWZhdWx0fSAke3N0eWxlcy5wcmV2TnVtYmVyfWBcclxuICAgICAgICBjb250cm9sQ29udGFpbmVyLmNsYXNzTmFtZSA9IHN0eWxlcy5jb250cm9sQ29udGFpbmVyXHJcbiAgICAgICAgYnV0dG9uQmxvY2tlZCA9IGZhbHNlXHJcbiAgICB9KVxyXG5cclxuICAgIC8vIENhbGN1bGF0aW5nIG5leHRWaWV3IFBSRVYgQ0xJQ0tcclxuXHJcbiAgICBjb25zdCBsYXN0UG9zaXRpb25PZkVsZW1lbnRQcmV2Q2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgY3VycmVudE51bWJlciA9IHByZXZOdW1iZXJcclxuICAgICAgICBwcmV2TnVtYmVyID0gY3VycmVudE51bWJlciAtIDFcclxuICAgICAgICBuZXh0TnVtYmVyID0gMFxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGZpcnN0UG9zaXRpb25PZkVsZW1lbnRQcmV2Q2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgY3VycmVudE51bWJlciA9IDBcclxuICAgICAgICBwcmV2TnVtYmVyID0gbnVtYmVyT2ZFbGVtZW50cyAtIDFcclxuICAgICAgICBuZXh0TnVtYmVyID0gY3VycmVudE51bWJlciArIDFcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBtaWRkbGVQb3NpdGlvbk9mRWxlbWVudFByZXZDbGljayA9ICgpID0+IHtcclxuICAgICAgICBjdXJyZW50TnVtYmVyLS1cclxuICAgICAgICBwcmV2TnVtYmVyID0gY3VycmVudE51bWJlciAtIDFcclxuICAgICAgICBuZXh0TnVtYmVyID0gY3VycmVudE51bWJlciArIDFcclxuICAgIH1cclxuXHJcbiAgICAvLyBDYWxjdWxhdGluZyBuZXh0VmlldyBORVhUIENMSUNLXHJcblxyXG4gICAgY29uc3QgbGFzdFBvc2l0aW9uT2ZFbGVtZW50TmV4dENsaWNrID0gKCkgPT4ge1xyXG4gICAgICAgIHByZXZOdW1iZXIgPSBjdXJyZW50TnVtYmVyXHJcbiAgICAgICAgY3VycmVudE51bWJlciA9IDBcclxuICAgICAgICBuZXh0TnVtYmVyID0gY3VycmVudE51bWJlciArIDFcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwcmVMYXN0UG9zaXRpb25PZkVsZW1lbnROZXh0Q2xpY2sgPSAoKSA9PiB7XHJcbiAgICAgICAgY3VycmVudE51bWJlciA9IG5leHROdW1iZXJcclxuICAgICAgICBwcmV2TnVtYmVyID0gbmV4dE51bWJlciAtIDFcclxuICAgICAgICBuZXh0TnVtYmVyID0gMFxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IG1pZGRsZVBvc2l0aW9uT2ZFbGVtZW50TmV4dENsaWNrID0gKCkgPT4ge1xyXG4gICAgICAgIGN1cnJlbnROdW1iZXIrK1xyXG4gICAgICAgIHByZXZOdW1iZXIgPSBjdXJyZW50TnVtYmVyIC0gMVxyXG4gICAgICAgIG5leHROdW1iZXIgPSBjdXJyZW50TnVtYmVyICsgMVxyXG4gICAgfVxyXG5cclxuICAgIGxldCBwcmVzZW50YXRpb24gPSBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgICAgc2ltdWxhdGlvbk5leHRDbGljaygpXHJcbiAgICB9LCB0aW1lb3V0KVxyXG5cclxuICAgIGNvbnN0IHJlc2V0SW50ZXJ2YWwgPSAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHByZXNlbnRhdGlvbikgY2xlYXJJbnRlcnZhbChwcmVzZW50YXRpb24pXHJcbiAgICAgICAgcHJlc2VudGF0aW9uID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG4gICAgICAgICAgICBzaW11bGF0aW9uTmV4dENsaWNrKClcclxuICAgICAgICB9LCB0aW1lb3V0KVxyXG4gICAgfVxyXG5cclxuICAgIHNsaWRlc0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxyXG4gICAgICAgIGNsZWFySW50ZXJ2YWwocHJlc2VudGF0aW9uKVxyXG4gICAgICAgIHN0YXJ0UG9zaXRpb24gPSBldmVudC5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYXHJcbiAgICB9LCBmYWxzZSlcclxuXHJcbiAgICBzbGlkZXNDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCAoZXZlbnQpID0+IHtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICAgICAgaWYgKGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFggLSBzdGFydFBvc2l0aW9uID4gMCkge1xyXG4gICAgICAgICAgICBzaW11bGF0aW9uUHJldkNsaWNrKClcclxuICAgICAgICAgICAgaWYgKHN0YXR1c1ByZXNlbnRhdGlvbikgcmVzZXRJbnRlcnZhbCgpXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgc2ltdWxhdGlvbk5leHRDbGljaygpXHJcbiAgICAgICAgICAgIGlmIChzdGF0dXNQcmVzZW50YXRpb24pIHJlc2V0SW50ZXJ2YWwoKVxyXG4gICAgICAgIH1cclxuICAgIH0sIGZhbHNlKVxyXG5cclxuICAgIHNsaWRlc0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCAoZXZlbnQpID0+IHtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICAgICAgaWYgKCFidXR0b25CbG9ja2VkKSB7XHJcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwocHJlc2VudGF0aW9uKVxyXG4gICAgICAgICAgICBzdGFydFBvc2l0aW9uID0gZXZlbnQuY2xpZW50WFxyXG4gICAgICAgIH1cclxuICAgIH0sIGZhbHNlKVxyXG5cclxuXHJcbiAgICBzbGlkZXNDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIChldmVudCkgPT4ge1xyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcclxuICAgICAgICBpZiAoIWJ1dHRvbkJsb2NrZWQpIHtcclxuICAgICAgICAgICAgaWYgKGV2ZW50LmNsaWVudFggLSBzdGFydFBvc2l0aW9uID4gMCkge1xyXG4gICAgICAgICAgICAgICAgc2ltdWxhdGlvblByZXZDbGljaygpXHJcbiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzUHJlc2VudGF0aW9uKSByZXNldEludGVydmFsKClcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChldmVudC5jbGllbnRYIC0gc3RhcnRQb3NpdGlvbiA8IDApIHtcclxuICAgICAgICAgICAgICAgIHNpbXVsYXRpb25OZXh0Q2xpY2soKVxyXG4gICAgICAgICAgICAgICAgaWYgKHN0YXR1c1ByZXNlbnRhdGlvbikgcmVzZXRJbnRlcnZhbCgpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LCBmYWxzZSlcclxuXHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmVzZXRJbnRlcnZhbCgpXHJcbiAgICB9KTtcclxuXHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjbGVhckludGVydmFsKHByZXNlbnRhdGlvbilcclxuICAgIH0pO1xyXG5cclxuICAgIGZ1bmN0aW9uIGFkZENvbnRyb2xzKCkge1xyXG4gICAgICAgIGxldCBzdGF0dXNCdXR0b25zVmlzaWJpbGl0eSA9IHRydWVcclxuXHJcbiAgICAgICAgY29uc3QgYnV0dG9uQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcclxuICAgICAgICBidXR0b25Db250YWluZXIuY2xhc3NOYW1lID0gc3R5bGVzLmJ1dHRvbkNvbnRhaW5lclxyXG4gICAgICAgIHNsaWRlci5hcHBlbmQoYnV0dG9uQ29udGFpbmVyKVxyXG5cclxuICAgICAgICBjb25zdCBidG5QbGF5UGF1c2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxyXG4gICAgICAgIGNvbnN0IGJ0blBsYXlQYXVzZVNWRyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcbiAgICAgICAgYnRuUGxheVBhdXNlLmFwcGVuZChidG5QbGF5UGF1c2VTVkcpXHJcbiAgICAgICAgYnRuUGxheVBhdXNlU1ZHLm91dGVySFRNTCA9IHN2Z091dGVySFRNTEVsZW1lbnRcclxuICAgICAgICBidG5QbGF5UGF1c2UuY2xhc3NOYW1lID0gc3R5bGVzLnBsYXlQYXVzZUJ0blxyXG4gICAgICAgIGNvbnN0IGxlZnR0b3BsYXkgPSBidG5QbGF5UGF1c2UuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbGVmdHRvcGxheScpWzBdXHJcbiAgICAgICAgY29uc3QgcmlnaHR0b3BsYXkgPSBidG5QbGF5UGF1c2UuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncmlnaHR0b3BsYXknKVswXVxyXG4gICAgICAgIGNvbnN0IGxlZnR0b3BhdXNlID0gYnRuUGxheVBhdXNlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2xlZnR0b3BhdXNlJylbMF1cclxuICAgICAgICBjb25zdCByaWdodHRvcGF1c2UgPSBidG5QbGF5UGF1c2UuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncmlnaHR0b3BhdXNlJylbMF1cclxuXHJcblxyXG4gICAgICAgIGNvbnN0IGJ0blByZXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxyXG4gICAgICAgIGNvbnN0IGJ0bk5leHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxyXG4gICAgICAgIGNvbnN0IGJ0bkhpZGVBY3Rpb25CYXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxyXG4gICAgICAgIGJ0blByZXYuY2xhc3NOYW1lID0gc3R5bGVzLmJ0blByZXZcclxuICAgICAgICBidG5OZXh0LmNsYXNzTmFtZSA9IHN0eWxlcy5idG5OZXh0XHJcbiAgICAgICAgYnRuSGlkZUFjdGlvbkJhci5jbGFzc05hbWUgPSBzdHlsZXMuYnRuSGlkZUFjdGlvbkJhclxyXG4gICAgICAgIGJ0blByZXYuaW5uZXJIVE1MID0gYXJyb3dcclxuICAgICAgICBidG5OZXh0LmlubmVySFRNTCA9IGFycm93XHJcbiAgICAgICAgYnRuSGlkZUFjdGlvbkJhci5pbm5lckhUTUwgPSBkb3duXHJcbiAgICAgICAgYnV0dG9uQ29udGFpbmVyLmFwcGVuZChidG5QcmV2LCBidG5QbGF5UGF1c2UsIGJ0bk5leHQsIGJ0bkhpZGVBY3Rpb25CYXIpXHJcblxyXG4gICAgICAgIGNvbnN0IGhpZGVCdXR0b25zID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBidG5OZXh0LmNsYXNzTGlzdC50b2dnbGUoc3R5bGVzLm9wYWNpdHlJbnZpc2libGUpXHJcbiAgICAgICAgICAgIGJ0blByZXYuY2xhc3NMaXN0LnRvZ2dsZShzdHlsZXMub3BhY2l0eUludmlzaWJsZSlcclxuICAgICAgICAgICAgYnRuUGxheVBhdXNlLmNsYXNzTGlzdC50b2dnbGUoc3R5bGVzLm9wYWNpdHlJbnZpc2libGUpXHJcbiAgICAgICAgICAgIGJ0blBsYXlQYXVzZS5kaXNhYmxlZCA9IHRydWVcclxuICAgICAgICAgICAgYnRuTmV4dC5kaXNhYmxlZCA9IHRydWVcclxuICAgICAgICAgICAgYnRuUHJldi5kaXNhYmxlZCA9IHRydWVcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IG9wZW5CdXR0b25zID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBidG5OZXh0LmNsYXNzTGlzdC50b2dnbGUoc3R5bGVzLm9wYWNpdHlJbnZpc2libGUpXHJcbiAgICAgICAgICAgIGJ0blByZXYuY2xhc3NMaXN0LnRvZ2dsZShzdHlsZXMub3BhY2l0eUludmlzaWJsZSlcclxuICAgICAgICAgICAgYnRuUGxheVBhdXNlLmNsYXNzTGlzdC50b2dnbGUoc3R5bGVzLm9wYWNpdHlJbnZpc2libGUpXHJcbiAgICAgICAgICAgIGJ0blBsYXlQYXVzZS5kaXNhYmxlZCA9IGZhbHNlXHJcbiAgICAgICAgICAgIGJ0bk5leHQuZGlzYWJsZWQgPSBmYWxzZVxyXG4gICAgICAgICAgICBidG5QcmV2LmRpc2FibGVkID0gZmFsc2VcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICBidG5IaWRlQWN0aW9uQmFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoc3RhdHVzQnV0dG9uc1Zpc2liaWxpdHkpIHtcclxuICAgICAgICAgICAgICAgIGJ0bkhpZGVBY3Rpb25CYXIuY2xhc3NMaXN0LnRvZ2dsZShzdHlsZXMuaGlkZUNsaWNrKVxyXG4gICAgICAgICAgICAgICAgaGlkZUJ1dHRvbnMoKVxyXG4gICAgICAgICAgICAgICAgc3RhdHVzQnV0dG9uc1Zpc2liaWxpdHkgPSBmYWxzZVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgYnRuSGlkZUFjdGlvbkJhci5jbGFzc0xpc3QudG9nZ2xlKHN0eWxlcy5oaWRlQ2xpY2spXHJcbiAgICAgICAgICAgICAgICBvcGVuQnV0dG9ucygpXHJcbiAgICAgICAgICAgICAgICBzdGF0dXNCdXR0b25zVmlzaWJpbGl0eSA9IHRydWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcblxyXG5cclxuICAgICAgICBidG5QbGF5UGF1c2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcclxuICAgICAgICAgICAgaWYgKHN0YXR1c1ByZXNlbnRhdGlvbikge1xyXG4gICAgICAgICAgICAgICAgbGVmdHRvcGxheS5iZWdpbkVsZW1lbnQoKTtcclxuICAgICAgICAgICAgICAgIHJpZ2h0dG9wbGF5LmJlZ2luRWxlbWVudCgpO1xyXG4gICAgICAgICAgICAgICAgc3RhdHVzUHJlc2VudGF0aW9uID0gZmFsc2VcclxuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwocHJlc2VudGF0aW9uKVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbGVmdHRvcGF1c2UuYmVnaW5FbGVtZW50KCk7XHJcbiAgICAgICAgICAgICAgICByaWdodHRvcGF1c2UuYmVnaW5FbGVtZW50KCk7XHJcbiAgICAgICAgICAgICAgICBzdGF0dXNQcmVzZW50YXRpb24gPSB0cnVlXHJcbiAgICAgICAgICAgICAgICByZXNldEludGVydmFsKClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sIGZhbHNlKVxyXG5cclxuICAgICAgICBidG5OZXh0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIWJ1dHRvbkJsb2NrZWQpIHtcclxuICAgICAgICAgICAgICAgIHNpbXVsYXRpb25OZXh0Q2xpY2soKVxyXG4gICAgICAgICAgICAgICAgaWYgKHN0YXR1c1ByZXNlbnRhdGlvbikgcmVzZXRJbnRlcnZhbCgpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBidG5QcmV2LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIWJ1dHRvbkJsb2NrZWQpIHtcclxuICAgICAgICAgICAgICAgIHNpbXVsYXRpb25QcmV2Q2xpY2soKVxyXG4gICAgICAgICAgICAgICAgaWYgKHN0YXR1c1ByZXNlbnRhdGlvbikgcmVzZXRJbnRlcnZhbCgpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbmV4cG9ydCB7IGNyZWF0ZVNsaWRlciB9Il0sInNvdXJjZVJvb3QiOiIifQ==